clear; clc;
warning('off');

%% Add path

addpath(genpath('/home/jyao3/030_QSM/01_Code'));
addpath(genpath('/home/jyao3/010_MATLAB_Utils/NIfTI'));
addpath(genpath('/home/jyao3/031_HD_NDM'));

matout_root = '/working/lupolab/jingwen/001_QSM/03_QSM_HD/';

%% read in subject list

T = readtable('/working/lupolab/jingwen/001_QSM/QSM_SubjectList_20220909.xlsx','Sheet','NoRep');
T(strcmp(T.status_reclass,'MISSING'),:) = [];
subjList = [T.b_num];
examList = [T.t_num];
statusList = [T.status_reclass];

%% Loop through subjects

for ii = 1:length(subjList)
    
    subjPath = ['/data/7T_hunt/' subjList{ii} '/' examList{ii} '/swan_qsm/HDBET_allQSM/'];
    
    T1_path = [subjPath 'FSseg/' subjList{ii} '_' examList{ii} '_T1_N4.nii'];
    T1brain_path = [subjPath 'FSseg/T1_brain.nii.gz'];
    mask_path = [subjPath 'FSseg/brain_mask_reg.nii.gz'];
    if exist(T1brain_path,'file') == 0
        fprintf('Brain mask - %s \n', [subjList{ii} '_' examList{ii}]);
        cmd_str = sprintf('3dcalc -a %s -b %s -expr a*b -prefix %s', ...
            T1_path, mask_path, T1brain_path);
        system(cmd_str);
    end
    
    if exist([subjPath 'ANTSreg/T1_MNI_warped.nii.gz'],'file') == 0
        cmd_str = ['rootPath="' subjPath '";'...
            'regPath="${rootPath}ANTSreg/";'...
            'mkdir $regPath;'...
            't1brainPath="${rootPath}FSseg/T1_brain.nii.gz";'...
            'outputPath="${regPath}T1_MNI_";'...
            'atlasPath="/working/lupolab/jingwen/090_Brain_ROIs_QSM_Atlas/MNI_T1.nii.gz";'...
            'cp $atlasPath $regPath;'...
            'cp $t1brainPath $regPath;'...
            'antsRegistration --dimensionality 3 --float 0 '...
            '--output [${outputPath},${outputPath}warped.nii.gz] '...
            '--interpolation Linear '...
            '--winsorize-image-intensities [0.005,0.995] '...
            '--use-histogram-matching 0 '...
            '--initial-moving-transform [$atlasPath,$t1brainPath,1] '...
            '--transform Rigid[0.1] '...
            '--metric MI[$atlasPath,$t1brainPath,1,32,Regular,0.25] '...
            '--convergence [1000x500x250x100,1e-6,10] '...
            '--shrink-factors 8x4x2x1 '...
            '--smoothing-sigmas 3x2x1x0vox '...
            '--transform Affine[0.1] '...
            '--metric MI[$atlasPath,$t1brainPath,1,32,Regular,0.25] '...
            '--convergence [1000x500x250x100,1e-6,10] '...
            '--shrink-factors 8x4x2x1 '...
            '--smoothing-sigmas 3x2x1x0vox '...
            '--transform SyN[0.1,3,0] '...
            '--metric CC[$atlasPath,$t1brainPath,1,4] '...
            '--convergence [100x70x50x20,1e-6,10] '...
            '--shrink-factors 8x4x2x1 '...
            '--smoothing-sigmas 3x2x1x0vox '...
            '--verbose'];
        system(cmd_str);
    else
        disp(['Registration existed for ' subjPath]);
    end
    
end

%% Loop through subjects and register QSM files - ANTS registration & normalization

VentMask_path = [matout_root '/Data/mask_lat_vent.nii.gz'];

cmd_str = '3dTcat ';
for ii = 1:length(subjList)
    
    subjPath = ['/data/7T_hunt/' subjList{ii} '/' examList{ii}];
    fprintf('%s is %s \n', subjPath, statusList{ii});
    
    QSMfile_root = [subjPath '/swan_qsm/HDBET_allQSM/'];
    QSMfile_path = [QSMfile_root 'FSseg/QSM_iLSQR_meanEcho_reg.nii.gz'];
    QSMfile_reg_path = [QSMfile_root 'ANTSreg/QSM_iLSQR_MNI.nii.gz'];
    MNIfile_path = [QSMfile_root 'ANTSreg/MNI_T1.nii.gz'];
    MNItrans1_path = [QSMfile_root 'ANTSreg/T1_MNI_1Warp.nii.gz'];
    MNItrans2_path = [QSMfile_root 'ANTSreg/T1_MNI_0GenericAffine.mat'];
    
    if exist(QSMfile_reg_path,'file') == 0
        cmd = sprintf('antsApplyTransforms -d 3 -i %s -r %s -t %s -t %s -o %s', ...
            QSMfile_path, MNIfile_path, MNItrans1_path, MNItrans2_path, QSMfile_reg_path);
        system(cmd);
    end
    
    newfile_path = [matout_root '/ANTSreg_QSM_subj/' subjList{ii} '_' examList{ii} '_QSM_iLSQR_MNI.nii'];
    
    if exist(newfile_path, 'file') == 0
        cmd = sprintf('3dmaskave -q -mask %s %s', VentMask_path, QSMfile_reg_path);
        [~,out] = system(cmd);
        normVal = strsplit(out);
        normVal = normVal{end-1};
        fprintf(' - Ventrical QSM = %s\n', normVal);
        
        cmd = sprintf('3dcalc -a %s -expr a-%s -prefix %s', QSMfile_reg_path, normVal, newfile_path);
        [~,out_3dcalc] = system(cmd);
    end
    
    if exist(newfile_path,'file') > 0
        cmd_str = [cmd_str ' ' newfile_path];
    end
    
end
delete([matout_root '/Data/allQSM_ANTS.nii.gz']);
cmd_str = [cmd_str ' -prefix ' matout_root '/Data/allQSM_ANTS.nii.gz'];
system(cmd_str);

%% Loop through subjects and register DTI files

mkdir([matout_root '/ANTSreg_DTI_subj/']);

cmdFA_str = '3dTcat ';
cmdMD_str = '3dTcat ';
for ii = 1:length(subjList)
    
    subjPath = ['/data/7T_hunt/' subjList{ii} '/' examList{ii}];
    
    exam_id = [subjList{ii} '_' examList{ii}];
    T1file = [subjPath '/swan_qsm/HDBET_allQSM/FSseg/' exam_id '_T1_N4.nii'];
    DTIfile_root = [subjPath '/swan_qsm/HDBET_allQSM/DTI/'];
    
    FA_path = [DTIfile_root 'FA_regT1.nii.gz'];
    FAreg_path = [DTIfile_root '../ANTSreg/FA_MNI.nii.gz'];
    MD_path = [DTIfile_root 'MD_regT1.nii.gz'];
    MDreg_path = [DTIfile_root '../ANTSreg/MD_MNI.nii.gz'];
    MNIfile_path = [DTIfile_root '../ANTSreg/MNI_T1.nii.gz'];
    MNItrans1_path = [DTIfile_root '../ANTSreg/T1_MNI_1Warp.nii.gz'];
    MNItrans2_path = [DTIfile_root '../ANTSreg/T1_MNI_0GenericAffine.mat'];
    
    if exist(FAreg_path,'file') == 0
        fprintf('%s - Registrating FA \n', exam_id);
        cmd = sprintf('antsApplyTransforms -d 3 -i %s -r %s -t %s -t %s -o %s', ...
            FA_path, MNIfile_path, MNItrans1_path, MNItrans2_path, FAreg_path);
        system(cmd);
    end
    
    if exist(MDreg_path,'file') == 0
        fprintf('%s - Registrating MD \n', exam_id);
        cmd = sprintf('antsApplyTransforms -d 3 -i %s -r %s -t %s -t %s -o %s', ...
            MD_path, MNIfile_path, MNItrans1_path, MNItrans2_path, MDreg_path);
        system(cmd);
    end
    
    newfile_path = [matout_root '/ANTSreg_DTI_subj/' subjList{ii} '_' examList{ii} '_FA_MNI.nii'];
    if exist(newfile_path, 'file') == 0
        cmd = sprintf('3dcopy %s %s', FAreg_path, newfile_path);
        [~,out_3dcalc] = system(cmd);
    end
    if exist(newfile_path,'file'); cmdFA_str = [cmdFA_str ' ' newfile_path]; end
    
    newfile_path = [matout_root '/ANTSreg_DTI_subj/' subjList{ii} '_' examList{ii} '_MD_MNI.nii'];
    if exist(newfile_path, 'file') == 0
        cmd = sprintf('3dcopy %s %s', MDreg_path, newfile_path);
        [~,out_3dcalc] = system(cmd);
    end
    if exist(newfile_path,'file'); cmdMD_str = [cmdMD_str ' ' newfile_path]; end
    
end

delete([matout_root '/Data/allFA_ANTS.nii.gz']);
delete([matout_root '/Data/allMD_ANTS.nii.gz']);

cmdFA_str = [cmdFA_str ' -prefix ' matout_root '/Data/allFA_ANTS.nii.gz'];
system(cmdFA_str);
cmdMD_str = [cmdMD_str ' -prefix ' matout_root '/Data/allMD_ANTS.nii.gz'];
system(cmdMD_str);

%% Loop through subjects and inverse warp the ROI mask

for ii = 1:length(subjList)
    
    subjPath = ['/data/7T_hunt/' subjList{ii} '/' examList{ii} ...
        '/swan_qsm/HDBET_allQSM/'];
    fprintf('%s is %s \n', subjList{ii}, statusList{ii});
    
    T1native_path = [subjPath 'FSseg/T1_brain.nii.gz'];
    ROInative_path = [subjPath 'FSseg/ROIs_ANTS.nii.gz'];
    CSFnative_path = [subjPath 'FSseg/T1_brain_seg_0.nii.gz'];
    ROInativeClean_path = [subjPath 'FSseg/Seg_ANTS.nii.gz'];
    MNImask_path = [matout_root '/Data/Seg_Subcortical.nii.gz'];
    MNItrans1_path = [subjPath 'ANTSreg/T1_MNI_1InverseWarp.nii.gz'];
    MNItrans2_path = [subjPath 'ANTSreg/T1_MNI_0GenericAffine.mat'];
    MNICSFmask_path = [matout_root '/Data/mask_lat_vent.nii.gz'];
    NativeCSFmask_path = [subjPath 'FSseg/latven_mask_reg.nii.gz'];
    
%     if exist(CSFnative_path,'file') == 0
%         cmd = sprintf('fast -g %s', T1native_path);
%         system(cmd);
%     end
    
    if exist(ROInativeClean_path,'file') == 0
        cmd = sprintf(['antsApplyTransforms -d 3 ' ...
            '-i %s -r %s -t [%s, 1] -t %s -o %s -n NearestNeighbor'], ...
            MNImask_path, T1native_path, MNItrans2_path, MNItrans1_path, ROInative_path);
        system(cmd);
        cmd = sprintf('3dcalc -a %s -b %s -expr ''a*(1-b)'' -prefix %s', ...
            ROInative_path, CSFnative_path, ROInativeClean_path);
        system(cmd);
    end
    
    if exist(NativeCSFmask_path,'file') == 0
        cmd = sprintf(['antsApplyTransforms -d 3 ' ...
            '-i %s -r %s -t [%s, 1] -t %s -o %s -n NearestNeighbor'], ...
            MNICSFmask_path, T1native_path, MNItrans2_path, MNItrans1_path, NativeCSFmask_path);
        system(cmd);
    end
    
end

%% register template - subcortical labels

subjPath = ['/working/lupolab/jingwen/001_QSM/03_QSM_HD/Data/mni_PD25_20170213_nifti/'];

cmd_str = ['rootPath="' subjPath '";'...
    'regPath="${rootPath}ANTSreg/";'...
    'mkdir $regPath;'...
    't1brainPath="${rootPath}/T1_brain.nii.gz";'...
    'outputPath="${regPath}T1_MNI_";'...
    'atlasPath="/working/lupolab/jingwen/090_Brain_ROIs_QSM_Atlas/MNI_T1.nii.gz";'...
    'cp $atlasPath $regPath;'...
    'cp $t1brainPath $regPath;'...
    'antsRegistration --dimensionality 3 --float 0 '...
    '--output [${outputPath},${outputPath}warped.nii.gz] '...
    '--interpolation Linear '...
    '--winsorize-image-intensities [0.005,0.995] '...
    '--use-histogram-matching 0 '...
    '--initial-moving-transform [$atlasPath,$t1brainPath,1] '...
    '--transform Rigid[0.1] '...
    '--metric MI[$atlasPath,$t1brainPath,1,32,Regular,0.25] '...
    '--convergence [1000x500x250x100,1e-6,10] '...
    '--shrink-factors 8x4x2x1 '...
    '--smoothing-sigmas 3x2x1x0vox '...
    '--transform Affine[0.1] '...
    '--metric MI[$atlasPath,$t1brainPath,1,32,Regular,0.25] '...
    '--convergence [1000x500x250x100,1e-6,10] '...
    '--shrink-factors 8x4x2x1 '...
    '--smoothing-sigmas 3x2x1x0vox '...
    '--transform SyN[0.1,3,0] '...
    '--metric CC[$atlasPath,$t1brainPath,1,4] '...
    '--convergence [100x70x50x20,1e-6,10] '...
    '--shrink-factors 8x4x2x1 '...
    '--smoothing-sigmas 3x2x1x0vox '...
    '--verbose'];
system(cmd_str);

ROIfile_path = [subjPath 'PD25-subcortical-1mm.nii.gz'];
ROIfile_reg_path = [subjPath 'ANTSreg/PD_subcortical.nii.gz'];
MNIfile_path = [subjPath 'ANTSreg/MNI_T1.nii.gz'];
MNItrans1_path = [subjPath 'ANTSreg/T1_MNI_1Warp.nii.gz'];
MNItrans2_path = [subjPath 'ANTSreg/T1_MNI_0GenericAffine.mat'];

cmd = sprintf('antsApplyTransforms -d 3 -i %s -r %s -t %s -t %s -o %s -n NearestNeighbor', ...
    ROIfile_path, MNIfile_path, MNItrans1_path, MNItrans2_path, ROIfile_reg_path);
system(cmd);

%% register template - QSMatlas labels

subjPath = ['/working/lupolab/jingwen/001_QSM/03_QSM_HD/Atlas/'];

cmd_str = ['rootPath="' subjPath '";'...
    'regPath="${rootPath}QSMreg/";'...
    'mkdir $regPath;'...
    't1brainPath="${rootPath}/QSM_atlas.nii";'...
    'outputPath="${regPath}QSM2MNI_";'...
    'atlasPath="/working/lupolab/jingwen/090_Brain_ROIs_QSM_Atlas/MNI_T1.nii.gz";'...
    'cp $atlasPath $regPath;'...
    'cp $t1brainPath $regPath;'...
    'antsRegistration --dimensionality 3 --float 0 '...
    '--output [${outputPath},${outputPath}warped.nii.gz] '...
    '--interpolation Linear '...
    '--winsorize-image-intensities [0.005,0.995] '...
    '--use-histogram-matching 0 '...
    '--initial-moving-transform [$atlasPath,$t1brainPath,1] '...
    '--transform Rigid[0.1] '...
    '--metric MI[$atlasPath,$t1brainPath,1,32,Regular,0.25] '...
    '--convergence [1000x500x250x100,1e-6,10] '...
    '--shrink-factors 8x4x2x1 '...
    '--smoothing-sigmas 3x2x1x0vox '...
    '--transform Affine[0.1] '...
    '--metric MI[$atlasPath,$t1brainPath,1,32,Regular,0.25] '...
    '--convergence [1000x500x250x100,1e-6,10] '...
    '--shrink-factors 8x4x2x1 '...
    '--smoothing-sigmas 3x2x1x0vox '...
    '--transform SyN[0.1,3,0] '...
    '--metric CC[$atlasPath,$t1brainPath,1,4] '...
    '--convergence [100x70x50x20,1e-6,10] '...
    '--shrink-factors 8x4x2x1 '...
    '--smoothing-sigmas 3x2x1x0vox '...
    '--verbose'];
system(cmd_str);

ROIfile_path = [subjPath 'Whole_brain_segmentation_DGM.nii'];
ROIfile_reg_path = [subjPath 'QSMreg/QSM_atlas_seg.nii.gz'];
MNIfile_path = [subjPath 'QSMreg/MNI_T1.nii.gz'];
MNItrans1_path = [subjPath 'QSMreg/QSM2MNI_1Warp.nii.gz'];
MNItrans2_path = [subjPath 'QSMreg/QSM2MNI_0GenericAffine.mat'];

cmd = sprintf('antsApplyTransforms -d 3 -i %s -r %s -t %s -t %s -o %s -n NearestNeighbor', ...
    ROIfile_path, MNIfile_path, MNItrans1_path, MNItrans2_path, ROIfile_reg_path);
system(cmd);